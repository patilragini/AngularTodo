import { Injectable } from '@angular/core';
import { Cookie } from 'ng2-cookies/ng2-cookies';
var CookieConfig = (function () {
    function CookieConfig() {
    }
    return CookieConfig;
}());
export { CookieConfig };
var StorageConfig = (function () {
    function StorageConfig() {
    }
    return StorageConfig;
}());
export { StorageConfig };
export var CookieConfigDefaults = {
    name: 'auth',
    ttl: 1
};
export var StorageConfigDefaults = {
    key: 'token',
    cookie: CookieConfigDefaults
};
var StorageService = (function () {
    function StorageService(config) {
        this.config = config;
        config = config || StorageConfigDefaults;
    }
    StorageService.prototype.getToken = function () {
        var token = sessionStorage.getItem(this.config.key);
        if (!token && this.config.cookie) {
            token = Cookie.get(this.config.cookie.name);
            if (token) {
                sessionStorage.setItem(this.config.key, token);
            }
        }
        return token || '';
    };
    StorageService.prototype.setToken = function (token) {
        sessionStorage.setItem(this.config.key, token);
        if (this.config.cookie) {
            Cookie.set(this.config.cookie.name, token, this.config.cookie.ttl || 1);
        }
    };
    StorageService.prototype.removeToken = function () {
        if (sessionStorage.getItem(this.config.key)) {
            sessionStorage.removeItem(this.config.key);
        }
        if (this.config.cookie && Cookie.get(this.config.cookie.name)) {
            Cookie.delete(this.config.cookie.name);
        }
    };
    return StorageService;
}());
export { StorageService };
StorageService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
StorageService.ctorParameters = function () { return [
    { type: StorageConfig, },
]; };
//# sourceMappingURL=angular2-http-storage.service.js.map