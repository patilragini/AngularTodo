{"version":3,"sources":["../../../src/angular2-http.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAuB,QAAA,EAAS,MAAO,eAAA,CAAgB;AAC9D,OAAO,EAAE,UAAA,EAAY,cAAA,EAAgB,kBAAA,EAA6B,IAAA,EAAM,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE1G,OAAO,EAAE,cAAA,EAAgB,aAAA,EAAe,YAAA,EAAa,MAAO,iCAAA,CAAkC;AAC9F,OAAO,EAAE,eAAA,EAAiB,cAAA,EAAe,MAAO,kCAAA,CAAmC;AACnF,OAAO,EAAE,WAAA,EAAY,MAAO,8BAAA,CAA+B;AAC3D,OAAO,EAAE,OAAA,EAAQ,MAAO,yBAAA,CAA0B;AAElD;IAA2C,yCAAkB;IAE3D;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;;IACvD,CAAC;IACH,4BAAC;AAAD,CANA,AAMC,CAN0C,kBAAkB,GAM5D;;AAED,MAAM,yBACJ,OAAS,EAAY,cAAgB,EACrC,OAAS,EACT,QAAU;IACV,MAAM,CAAC,IAAI,OAAA,CAAQ,OAAC,EAAQ,cAAA,EAAgB,OAAA,EAAS,QAAA,CAAS,CAAC;AACjE,CAAC;AAGD;IAAA;IAmCA,CAAC;IAlCe,mBAAO,GAArB,UAAsB,MAAoB,EAAE,OAAsB,EAAE,QAAwB;QAE1F,MAAM,CAAC;YACL,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT,cAAc;gBACd,eAAe;gBACf,WAAW;gBACX,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAC3C,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE;gBAC7C,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE;gBAC/C,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,qBAAqB,EAAE;gBAC5D;oBACE,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,cAAc;oBAC1B,IAAI,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,CAAC;iBACpE;aACF;SACF,CAAA;IACH,CAAC;IAAA,CAAC;IAeJ,kBAAC;AAAD,CAnCA,AAmCC;;AAdM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,UAAU,CAAC;gBACrB,SAAS,EAAE;oBACT,cAAc;oBACd,eAAe;oBACf,WAAW;oBACX,OAAO;iBACR;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"angular2-http.module.js","sourceRoot":"","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpModule, RequestOptions, BaseRequestOptions, Headers, Http, XHRBackend } from '@angular/http';\n\nimport { StorageService, StorageConfig, CookieConfig } from './angular2-http-storage.service';\nimport { RedirectService, RedirectConfig } from './angular2-http-redirect.service';\nimport { AuthService } from './angular2-http-auth.service';\nimport { JwtHttp } from './angular2-http.service';\n\nexport class DefaultRequestOptions extends BaseRequestOptions {\n  \n  constructor() {\n    super();  \n    this.headers.set('Content-Type', 'application/json');\n  }\n}\n\nexport function jwtHttpFactory(\n  backend: XHRBackend, defaultOptions: RequestOptions, \n  storage: StorageService, \n  redirect: RedirectService) {\n  return new JwtHttp(backend, defaultOptions, storage, redirect);\n}\n\n\nexport class Http2Module {\n  public static forRoot(cookie: CookieConfig, storage: StorageConfig, redirect: RedirectConfig)\n    : ModuleWithProviders {\n    return {\n      ngModule: Http2Module,\n      providers: [\n        StorageService,\n        RedirectService,\n        AuthService,\n        { provide: CookieConfig, useValue: cookie },\n        { provide: StorageConfig, useValue: storage },\n        { provide: RedirectConfig, useValue: redirect },\n        { provide: RequestOptions, useClass: DefaultRequestOptions },\n        {\n          provide: Http,\n          useFactory: jwtHttpFactory,\n          deps: [XHRBackend, RequestOptions, StorageService, RedirectService]\n        }\n      ]\n    }\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [HttpModule], \n  providers: [\n    StorageService,\n    RedirectService,\n    AuthService,\n    JwtHttp\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}